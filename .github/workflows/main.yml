name: Deploy Webserver with Persistent Cache

on:
  workflow_dispatch:

env:
  GIT_API_TOKEN: ${{ secrets.GIT_API_TOKEN }}

permissions:
  contents: write # IMPORTANT: We need 'write' for caching (it implicitly uses GH_TOKEN) and for re-dispatching workflow

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360 # Still rocking that long timeout, love it!

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache APT packages and custom tools # ðŸ”¥ NEW CACHING STEP! ðŸ”¥
        id: cache-system-and-tools # Give it an ID to check for cache hit
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives # APT downloaded packages
            /var/lib/apt/lists # APT package lists
            /usr/local/bin/jq # Assuming jq is installed here
            /usr/local/bin/sshx # Assuming sshx is installed here
            /usr/bin/sshx # Check if sshx installs here too
            # Add any other paths where your custom tools/binaries might land
            # Example: If your sshx.py creates a /home/runner/my_data_dir, add it here:
            # /home/runner/my_data_dir
          key: ${{ runner.os }}-apt-jq-sshx-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('del_workflow.py', 'sshx.py') }}-v1 # Unique key for this cache
          restore-keys: | # Fallback keys for partial hits
            ${{ runner.os }}-apt-jq-sshx-
            ${{ runner.os }}-apt-

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Installing essential module and library # Only run installs if cache miss!
        if: steps.cache-system-and-tools.outputs.cache-hit != 'true'
        run: |
          echo "No cache hit found for system packages and tools, installing now!"
          # Update package lists only if not cached or forced
          sudo apt-get update -y
          # Install apt packages
          sudo apt-get install -y jq
          # Install sshx - ensure it installs to one of the cached paths if possible
          curl -sSf https://sshx.io/get | sudo sh # Using sudo here to install to /usr/local/bin
          # Install python packages
          python3 -m pip install requests
          echo "Installation complete for system packages and tools!"
        # Important: The 'if' condition here ensures we skip redundant installations
        # when a cache is restored, saving time and resources.

      # --- Your existing steps continue here, but now with a potential performance boost! ---

      - name: Deleting previous workflow
        run: |
          python3 del_workflow.py

      - name: Running SSHX
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          python3 sshx.py &

      - name: Instance keep-alive
        run: |
          SLEEP=$((RANDOM % 1800 + 18000)) # 18000â€“19799
          echo "Sleeping for $SLEEP seconds (~$((SLEEP / 60)) minutes)"
          sleep $SLEEP

      - name: Retrigger Workflow
        env:
          REPO: ${{ github.repository }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -X DELETE $WEBHOOK_URL/messages/$(cat /home/runner/.webhook_id)

          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GIT_API_TOKEN" \
            https://api.github.com/repos/$REPO/actions/workflows/main.yml/dispatches \
            -d '{"ref":"main"}'
